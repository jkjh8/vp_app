import{ad as C,s as v,q as y,c as T,o as E,w as n,a as r,j as S,h as P,b as g,Q as I,t as _,W as D,R as k,e as w,X as x}from"./index-C-q7_Wnp.js";import{u as Q,a as U}from"./useStatus-D5ORqAiN.js";import{u as F}from"./use-dialog-plugin-component-DewEQrqM.js";import{_ as h}from"./delayedTooltip-DdlCD6mt.js";import{_ as R}from"./_plugin-vue_export-helper-B4JJX7vp.js";const Y=C("Playlist",()=>{const{pStatus:d}=v(Q()),{apiCallWithLoading:e}=U(),s=y([]),p=y(0),o=y(null),m=y(!1),i=async()=>{const a=await e("/playlist","GET",null,"Fetching playlist...");return s.value=a.data,s.value};return{playlists:s,currentIndex:p,currentPlaylist:o,isPlaying:m,getPlaylists:i,addPlaylist:async a=>{try{const t=await e("/playlist","POST",a,"Creating playlist...");return await i(),t.data}catch(t){console.error("Failed to add playlist:",t)}},updatePlaylist:async(a,t)=>{try{const l=await e("/playlist","PUT",{...t,id:a},"Updating playlist...");return await i(),l.data}catch(l){console.error("Failed to update playlist:",l)}},deletePlaylist:async a=>{try{const t=await e(`/playlist/${a}`,"DELETE",null,"Deleting playlist...");return await i(),t.data}catch(t){console.error("Error deleting playlist:",t)}},changeCurrentPlaylist:a=>{o.value=a},updateTracksInPlaylist:async(a,t)=>{try{const l=s.value.find(f=>f._id===a);if(!l)throw new Error("Playlist not found");const c=[...l.tracks||[],...t].map(f=>({uuid:f.uuid,time:0})),u=await e("/playlist","PUT",{tracks:c,id:a},"Updating tracks in playlist...");return await i(),u.data}catch(l){console.error("Error updating tracks in playlist:",l)}},removeTrackFromPlaylist:async(a,t)=>{try{const l=s.value.find(u=>u._id===a);if(!l)throw new Error("Playlist not found");l.tracks.splice(t,1);const c=await e("/playlist","PUT",{tracks:l.tracks.map(u=>u.uuid),id:a},"Removing track from playlist...");return await i(),c.data}catch(l){console.error("Error removing track from playlist:",l)}},playCurrentPlaylist:()=>{o.value?(d.value.playlistMode=!0,m.value=!0):console.error("No current playlist to play")},playlistPlay:async(a,t=0)=>{await e(`/playlist/play?playlistId=${a}&trackIndex=${t}`,"GET",null,"Playing playlist...")},getCurrentPlaylistId:()=>{if(o.value){const a=s.value.find(t=>t._id===o.value);return a?a.playlistId:null}return null},updateImageTime:async(a,t,l)=>{try{await e("playlist/image_time","PUT",{playlistId:a,idx:t,time:l},"Updating image time..."),await i()}catch(c){console.error("Error updating image time:",c)}}}}),B={class:"text-h6 q-ml-md"},$={class:"q-px-md"},q={__name:"confirmDialog",props:{title:{type:String,default:"Confirm"},message:{type:String,default:"Are you sure you want to proceed?"}},setup(d){const{dialogRef:e,onDialogOK:s,onDialogCancel:p}=F(),o=d;return(m,i)=>(E(),T(x,{ref_key:"dialogRef",ref:e},{default:n(()=>[r(S,null,{default:n(()=>[r(P,{class:"row items-center"},{default:n(()=>[r(I,{name:"help",size:"2em",color:"primary"}),g("div",B,_(o.title),1)]),_:1}),r(P,null,{default:n(()=>[g("div",$,[g("div",null,_(o.message),1)])]),_:1}),r(D,{align:"right"},{default:n(()=>[r(k,{round:"",flat:"",icon:"cancel",color:"grey",onClick:w(p)},{default:n(()=>[r(h,{msg:"Cancel"})]),_:1},8,["onClick"]),r(k,{round:"",flat:"",icon:"check_circle",color:"primary",onClick:w(s)},{default:n(()=>[r(h,{msg:"Confirm"})]),_:1},8,["onClick"])]),_:1})]),_:1})]),_:1},512))}},Z=R(q,[["__scopeId","data-v-4112319e"]]);export{Z as c,Y as u};

import{ad as n,s as c}from"./index-DeQagpOe.js";import{u as s,a as l}from"./useStatus-DfmcMskb.js";import{socket as y}from"./socketio-56qHkbI6.js";const x=n("player",()=>{const{pStatus:a}=c(s()),{apiCallWithLoading:o}=l();return{fnPlayById:async r=>{try{return await o(`/player/playid/${r}`,"GET",null)}catch(e){console.error("Error playing media by ID:",e)}},fnPlay:async()=>{try{await o(`/player/play/${a.value.activePlayerId}`,"GET",null)}catch(r){a.current={},console.error("Error playing media:",r)}},fnStop:async()=>{try{await o("/player/stop","GET",null)}catch(r){console.error("Error stopping media:",r)}},fnPause:async()=>{try{await o(`/player/pause/${a.value.activePlayerId}`,"GET",null)}catch(r){console.error("Error pausing media:",r)}},fnPrev:async()=>{try{await o("/player/prev","GET",null)}catch(r){console.error("Error playing previous media:",r)}},fnNext:async()=>{try{await o("/player/next","GET",null)}catch(r){console.error("Error playing next media:",r)}},fnUpdateTime:async r=>{try{y.emit("event",{type:"time",value:r,idx:a.value.activePlayerId})}catch(e){console.error("Error updating time:",e)}},fnSetFullscreen:async r=>{try{await o(`/player/fullscreen/${r}`,"GET",null)}catch(e){console.error("Error setting fullscreen mode:",e)}},fnSetLogo:async r=>{try{await o("/player/logo","POST",{logo:r})}catch(e){console.error("Error setting logo:",e)}},fnShowLogo:async r=>{try{await o("/player/show_logo","POST",{show:r})}catch(e){console.error("Error showing logo:",e)}},fnSetLogoSize:async(r,e)=>{try{await o("/player/logo_size","POST",{height:r,width:e})}catch(t){console.error("Error setting logo size:",t)}},fnSetBackground:async r=>{try{await o("/player/background","POST",{color:r})}catch(e){console.error("Error setting background:",e)}},setRepeat:async()=>{try{const r=await o("/player/repeat","GET",null);a.value.repeat=r.data.mode,console.log("Repeat mode set to:",a.value.repeat)}catch(r){console.error("Error setting repeat mode:",r)}}}});export{x as u};

import{m as h,bz as y,ad as w,q as S}from"./index-C8foiimD.js";function b(){return h(y)}const L=w("api",()=>{const o=b(),s=()=>window.getApi?window.getApi():null;return{apiCallWithLoading:async(l,g="GET",p=null,c="Loading...")=>{try{if(typeof l!="string")throw new TypeError(`Invalid URL: ${l}`);o.loading.show({message:c});const n={method:g,url:l,data:p};return await s()(n)}catch(n){throw console.error("Error during API call:",n),n}finally{o.loading.hide()}},getApi:s,getAddr:()=>window.getBaseURL?window.getBaseURL():window.location.origin}}),U=w("status",()=>{const{apiCallWithLoading:o}=L(),s=S({playlistMode:!1,nics:[],playlist:[],device:{audiodevice:"",audiodevices:[]},fullscreen:!1,logo:{show:!1,file:"",width:0,height:0,size:0,x:0,y:0},player:[{event:"",buffering:0,volume:100,speed:1,duration:0,time:0,position:0,playing:!1,file:{filename:"",size:0,path:"",is_image:!1}}],background:"",imageTime:0}),u=async(e,t)=>{const a=await o("/status/update","POST",{key:e,value:t},`Updating status for key "${e}"...`);if(a.data.pStatus)for(const[i,r]of Object.entries(a.data.pStatus))s.value[i]!==void 0?s.value[i]=r:console.warn(`Unknown key "${i}" in pStatus`);return a};return{pStatus:s,updateStatus:u,getAudioDevices:async()=>await o("/player/audio_devices","GET",null,"Getting current audio devices..."),setAudioDevice:async e=>{const t=await o("/player/setaudiodevice","PUT",{deviceId:e},"Setting audio device...");return s.value.device.audiodevice=e,t},isBright:e=>{let t=e.trim().toLowerCase();if(t==="white"||t==="#fff"||t==="#ffffff"||t==="rgb(255,255,255)")return!0;if(t.startsWith("#")){let a=t.replace("#","");if(a.length===3&&(a=a.split("").map(f=>f+f).join("")),a.length!==6)return!1;const i=parseInt(a.substring(0,2),16),r=parseInt(a.substring(2,4),16),d=parseInt(a.substring(4,6),16);return(i*299+r*587+d*114)/1e3>186}if(t.startsWith("rgb")){const a=t.match(/rgb\((\d+),(\d+),(\d+)\)/);if(a){const i=parseInt(a[1]),r=parseInt(a[2]),d=parseInt(a[3]);return(i*299+r*587+d*114)/1e3>186}}return!1},updateImageTime:async e=>{const t=await o(`/status/image_time/${e}`,"GET",null,`Updating image time to ${e}...`);t.data.pStatus&&(s.value.imageTime=t.data.pStatus.imageTime)},updateLogo:async e=>{const t=await o(`/status/logo/sel/${encodeURIComponent(e)}`,"GET",null,`Updating logo to ${e}...`);t.data.pStatus&&(s.value.logo=t.data.pStatus.logo),await u("logo",s.value.logo)},updateLogoSize:async e=>{const t=await o("/status/logo/size","PUT",{size:e},"Updating logo size...");if(!t.data.pStatus||!t.data.pStatus.logo){console.error("Failed to update logo size:",t.data);return}s.value.logo=t.data.pStatus.logo,await u("logo",s.value.logo)},updateLogoVisibility:async e=>{const t=await o(`/status/logo/show/${e?"true":"false"}`,"GET",null,`Updating logo visibility to ${e?"visible":"hidden"}...`);s.value.logo=t.data.pStatus.logo}}});export{L as a,b,U as u};

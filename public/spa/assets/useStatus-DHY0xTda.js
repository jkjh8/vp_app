import{m as v,bz as h,ad as w,q as y}from"./index-e6m8LkIT.js";function S(){return v(h)}const b=w("api",()=>{const s=S(),o=()=>window.getApi?window.getApi():null;return{apiCallWithLoading:async(u,g="GET",p=null,c="Loading...")=>{try{if(typeof u!="string")throw new TypeError(`Invalid URL: ${u}`);s.loading.show({message:c});const n={method:g,url:u,data:p};return await o()(n)}catch(n){throw console.error("Error during API call:",n),n}finally{s.loading.hide()}},getApi:o,getAddr:()=>window.getBaseURL?window.getBaseURL():window.location.origin}}),T=w("status",()=>{const{apiCallWithLoading:s}=b(),o=y({playlistMode:!1,nics:[],playlist:[],device:{audiocurrentdevice:"",audiodevicelist:[]},fullscreen:!1,logo:{show:!1,file:"",width:0,height:0,size:0,x:0,y:0},player:[{event:"",buffering:0,volume:100,speed:1,duration:0,time:0,position:0,playing:!1,file:{filename:"",size:0,path:"",is_image:!1}}],background:"",imageTime:0}),l=async(e,t)=>{const a=await s("/status/update","POST",{key:e,value:t},`Updating status for key "${e}"...`);if(a.data.pStatus)for(const[i,r]of Object.entries(a.data.pStatus))o.value[i]!==void 0?o.value[i]=r:console.warn(`Unknown key "${i}" in pStatus`);return a};return{pStatus:o,updateStatus:l,setAudioDevice:async e=>{const t=await s("/player/setaudiodevice","PUT",{deviceId:e},"Setting audio device...");return o.value.device.audiodevice=e,t},isBright:e=>{let t=e.trim().toLowerCase();if(t==="white"||t==="#fff"||t==="#ffffff"||t==="rgb(255,255,255)")return!0;if(t.startsWith("#")){let a=t.replace("#","");if(a.length===3&&(a=a.split("").map(f=>f+f).join("")),a.length!==6)return!1;const i=parseInt(a.substring(0,2),16),r=parseInt(a.substring(2,4),16),d=parseInt(a.substring(4,6),16);return(i*299+r*587+d*114)/1e3>186}if(t.startsWith("rgb")){const a=t.match(/rgb\((\d+),(\d+),(\d+)\)/);if(a){const i=parseInt(a[1]),r=parseInt(a[2]),d=parseInt(a[3]);return(i*299+r*587+d*114)/1e3>186}}return!1},updateImageTime:async e=>{const t=await s(`/status/image_time/${e}`,"GET",null,`Updating image time to ${e}...`);t.data.pStatus&&(o.value.imageTime=t.data.pStatus.imageTime)},updateLogo:async e=>{const t=await s(`/status/logo/sel/${encodeURIComponent(e)}`,"GET",null,`Updating logo to ${e}...`);t.data.pStatus&&(o.value.logo=t.data.pStatus.logo),await l("logo",o.value.logo)},updateLogoSize:async e=>{const t=await s("/status/logo/size","PUT",{size:e},"Updating logo size...");if(!t.data.pStatus||!t.data.pStatus.logo){console.error("Failed to update logo size:",t.data);return}o.value.logo=t.data.pStatus.logo,await l("logo",o.value.logo)},updateLogoVisibility:async e=>{const t=await s(`/status/logo/show/${e?"true":"false"}`,"GET",null,`Updating logo visibility to ${e?"visible":"hidden"}...`);o.value.logo=t.data.pStatus.logo,console.log(`Logo visibility updated to ${e?"visible":"hidden"}`)}}});export{b as a,S as b,T as u};
